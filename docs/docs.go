// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/messages/send": {
            "post": {
                "description": "Sends a message to the user with the specified fields.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notify"
                ],
                "summary": "Sending a message",
                "parameters": [
                    {
                        "description": "send mess",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.RequestNotification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Failed to create notification"
                    },
                    "504": {
                        "description": "Waiting time is up"
                    }
                }
            }
        },
        "/user/preferences": {
            "put": {
                "description": "Changes user preferences",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Preferences"
                ],
                "summary": "Changing preferences",
                "parameters": [
                    {
                        "description": "user preferences",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.RequestPreferences"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Failed to edit preferences"
                    },
                    "504": {
                        "description": "Waiting time is up"
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Channel": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            }
        },
        "entity.Channels": {
            "type": "object",
            "properties": {
                "email": {
                    "$ref": "#/definitions/entity.Channel"
                },
                "phone": {
                    "$ref": "#/definitions/entity.Channel"
                }
            }
        },
        "entity.EmailPreferences": {
            "type": "object",
            "properties": {
                "approval": {
                    "type": "boolean"
                },
                "notifyType": {
                    "type": "string"
                }
            }
        },
        "entity.PhonePreferences": {
            "type": "object",
            "properties": {
                "approval": {
                    "type": "boolean"
                },
                "notifyType": {
                    "type": "string"
                }
            }
        },
        "entity.Preferences": {
            "type": "object",
            "properties": {
                "email": {
                    "$ref": "#/definitions/entity.EmailPreferences"
                },
                "phone": {
                    "$ref": "#/definitions/entity.PhonePreferences"
                }
            }
        },
        "entity.RequestNotification": {
            "type": "object",
            "properties": {
                "channels": {
                    "$ref": "#/definitions/entity.Channels"
                },
                "notifyType": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "entity.RequestPreferences": {
            "type": "object",
            "properties": {
                "preferences": {
                    "$ref": "#/definitions/entity.Preferences"
                },
                "userId": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1.0.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Notify Service",
	Description:      "Notification Service",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
